service: general-lambda-functions

frameworkVersion: '2'
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: us-west-2
  timeout: 600
  environment:
    STAGE: ${opt:stage, 'dev'}
    BACKENDLESS_APP_KEY_PROD: ${env:BACKENDLESS_APP_KEY_PROD}
    BACKENDLESS_APP_ID_PROD: ${env:BACKENDLESS_APP_ID_PROD}
    BACKENDLESS_REST_KEY_PROD: ${env:BACKENDLESS_REST_KEY_PROD}
    AIRTABLE_API_KEY: ${env:AIRTABLE_API_KEY}
  tracing:
    apiGateway: true
    lambda: true

functions:
  isgOrderSourceToASCMLogistics:
    handler: src/airtable.isgOrderSourceToASCMLogistics
    events:
      - http:
          path: /airtable/ascm-logistics
          method: GET
          cors: true

  getInventoryByUserID:
    handler: src/inventory.getInventoryByUserIDLambdaFunc
    events:
      - http:
          path: /inventory
          method: POST
          cors: true

  sendOutSKUOutbounds:
    handler: src/sku_outbounds.sendOut
    events:
      - http:
          path: /sku_outbounds/{sku_outbound_id}/send_out
          method: POST
          cors: true

  sendOutSKUOutboundISGOrders:
    handler: src/sku_outboundisgorders.sendOut
    events:
      - http:
          path: /sku_outbound_isgorders/{sku_outbound_isgorder_id}/send_out
          method: POST
          cors: true

  pocBackendlessToAirtableInsert:
      handler: src/poc_backendless_to_airtable.insert
      events:
        - http:
            path: /poc/backendless-to-airtable/insert
            method: POST
            cors: true

  pocBackendlessToAirtableUpdate:
      handler: src/poc_backendless_to_airtable.update
      events:
        - http:
            path: /poc/backendless-to-airtable/update/{id}
            method: PUT
            cors: true

  pocBackendlessToAirtableDELETE:
      handler: src/poc_backendless_to_airtable.soft_delete
      events:
        - http:
            path: /poc/backendless-to-airtable/soft-delete/{id}
            method: DELETE
            cors: true

  beToAuroraMigrator:
    handler: src/be_to_aurora.ping
    events:
      - http:
          path: /be_to_aurora_serverless/ping
          method: GET
          cors: true
    vpc:
      securityGroupIds:
        - sg-878af1ca
      subnetIds:
        - subnet-554ee81d
        - subnet-5595f80c
        - subnet-490bbd2f

  migrationUp:
    handler: src/migration.up
    events:
      - http:
          path: /migration/up
          method: POST
          cors: true
    vpc:
      securityGroupIds:
        - sg-878af1ca
      subnetIds:
        - subnet-554ee81d
        - subnet-5595f80c
        - subnet-490bbd2f

  migrationForce:
    handler: src/migration.force
    events:
      - http:
          path: /migration/force/{version}
          method: POST
          cors: true
    vpc:
      securityGroupIds:
        - sg-878af1ca
      subnetIds:
        - subnet-554ee81d
        - subnet-5595f80c
        - subnet-490bbd2f

  migrationGoto:
    handler: src/migration.goto
    events:
      - http:
          path: /migration/goto/{version}
          method: POST
          cors: true
    vpc:
      securityGroupIds:
        - sg-878af1ca
      subnetIds:
        - subnet-554ee81d
        - subnet-5595f80c
        - subnet-490bbd2f

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  serverless-offline:
    noPrependStageInUrl: true
